{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dahlia\\\\Documents\\\\dahliaxie.github.io\\\\src\\\\pages\\\\Sample.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, lazy, Suspense } from 'react';\nimport nature3 from '../videos/nature3.mp4';\nimport eye2 from '../videos/eye2.mp4';\nimport eye from '../videos/eye.mp4';\nimport me2 from '../videos/me2.mp4';\nimport '../styles/Sample.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sample = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const numberOfVideos = 10; // Adjust this to control the number of videos /2\n  const maxVideoSize = 300; // Maximum width and height in pixels\n  const delayBetweenVideos = 500; // Delay in milliseconds between video appearances\n\n  const generateVideoStyles = index => {\n    const minGap = 100; // Adjust this value for desired spacing\n    const maxWidth = Math.min(maxVideoSize, window.innerWidth); // Don't exceed viewport width\n    const headerHeight = document.querySelector('.header').offsetHeight * 0.7; // Get header height\n    const maxHeight = Math.min(maxVideoSize, window.innerHeight - headerHeight - minGap); // Adjust for header height\n\n    const width = Math.floor(Math.random() * maxWidth) + 100; // Random width within limits\n    const height = Math.floor(Math.random() * (maxHeight - 100)) + 100; // Random height within limits\n\n    // Calculate maximum allowed top position to avoid header overlap\n    const maxTop = window.innerHeight - height - minGap;\n    // Generate random top position within allowed range (headerHeight to maxTop)\n    const top = Math.floor(Math.random() * (maxTop + 1) + headerHeight);\n    const left = Math.floor(Math.random() * (window.innerWidth - width));\n    const zIndex = Math.floor(Math.random() * 10) + 1; // Random z-index for layering\n\n    return {\n      width,\n      height,\n      top,\n      left,\n      zIndex\n    };\n  };\n  useEffect(() => {\n    const createVideos = async () => {\n      const videoElements = [];\n      for (let i = 0; i < numberOfVideos; i++) {\n        const delay = Math.floor(Math.random() * (numberOfVideos * delayBetweenVideos)); // Random delay within range\n\n        // Lazy load video components using dynamic imports\n        const VideoComponent = /*#__PURE__*/lazy(() => import('./Video'));\n        const preloadLink = document.createElement('link');\n        preloadLink.rel = 'preload';\n        preloadLink.as = 'video';\n        preloadLink.href = [nature3, eye2, me2][Math.floor(Math.random() * 3)]; // Choose a random video source\n        document.head.appendChild(preloadLink);\n        videoElements.push({\n          src: nature3,\n          style: generateVideoStyles(i),\n          delay,\n          component: VideoComponent\n        });\n        videoElements.push({\n          src: eye2,\n          style: generateVideoStyles(i),\n          delay,\n          component: VideoComponent\n        });\n        videoElements.push({\n          src: me2,\n          style: generateVideoStyles(i),\n          delay,\n          component: VideoComponent\n        });\n      }\n      setVideos(videoElements);\n    };\n    createVideos();\n  }, []);\n  useEffect(() => {\n    const handleResize = () => {\n      const newVideos = videos.map(video => ({\n        ...video,\n        style: generateVideoStyles(video.style) // Re-generate styles based on new window dimensions\n      }));\n\n      setVideos(newVideos);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [videos]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"video-container\",\n    children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(video.component, {\n        ...video,\n        autoPlay: true,\n        muted: true,\n        loop: true\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Sample, \"NlcbafLBEx37RaHXFOH4KiliPPw=\");\n_c = Sample;\nexport default Sample;\nvar _c;\n$RefreshReg$(_c, \"Sample\");","map":{"version":3,"names":["React","useState","useEffect","lazy","Suspense","nature3","eye2","eye","me2","jsxDEV","_jsxDEV","Sample","_s","videos","setVideos","numberOfVideos","maxVideoSize","delayBetweenVideos","generateVideoStyles","index","minGap","maxWidth","Math","min","window","innerWidth","headerHeight","document","querySelector","offsetHeight","maxHeight","innerHeight","width","floor","random","height","maxTop","top","left","zIndex","createVideos","videoElements","i","delay","VideoComponent","preloadLink","createElement","rel","as","href","head","appendChild","push","src","style","component","handleResize","newVideos","map","video","addEventListener","removeEventListener","className","children","fallback","fileName","_jsxFileName","lineNumber","columnNumber","autoPlay","muted","loop","_c","$RefreshReg$"],"sources":["C:/Users/Dahlia/Documents/dahliaxie.github.io/src/pages/Sample.js"],"sourcesContent":["import React, { useState, useEffect, lazy, Suspense } from 'react';\r\nimport nature3 from '../videos/nature3.mp4';\r\nimport eye2 from '../videos/eye2.mp4';\r\nimport eye from '../videos/eye.mp4';\r\nimport me2 from '../videos/me2.mp4';\r\nimport '../styles/Sample.css'\r\n\r\nconst Sample = () => {\r\n  const [videos, setVideos] = useState([]);\r\n  const numberOfVideos = 10; // Adjust this to control the number of videos /2\r\n  const maxVideoSize = 300; // Maximum width and height in pixels\r\n  const delayBetweenVideos = 500; // Delay in milliseconds between video appearances\r\n\r\n  const generateVideoStyles = (index) => {\r\n    const minGap = 100; // Adjust this value for desired spacing\r\n    const maxWidth = Math.min(maxVideoSize, window.innerWidth); // Don't exceed viewport width\r\n    const headerHeight = (document.querySelector('.header').offsetHeight* 0.7); // Get header height\r\n    const maxHeight = Math.min(maxVideoSize, window.innerHeight - headerHeight - minGap); // Adjust for header height\r\n  \r\n    const width = Math.floor(Math.random() * (maxWidth)) + 100; // Random width within limits\r\n    const height = Math.floor(Math.random() * (maxHeight - 100)) + 100; // Random height within limits\r\n  \r\n    // Calculate maximum allowed top position to avoid header overlap\r\n    const maxTop = window.innerHeight - height - minGap;\r\n    // Generate random top position within allowed range (headerHeight to maxTop)\r\n    const top = Math.floor(Math.random() * (maxTop + 1) + headerHeight); \r\n  \r\n    const left = Math.floor(Math.random() * (window.innerWidth - width));\r\n    const zIndex = Math.floor(Math.random() * 10) + 1; // Random z-index for layering\r\n  \r\n    return { width, height, top, left, zIndex };\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const createVideos = async () => {\r\n      const videoElements = [];\r\n      for (let i = 0; i < numberOfVideos; i++) {\r\n        const delay = Math.floor(Math.random() * (numberOfVideos * delayBetweenVideos)); // Random delay within range\r\n\r\n        // Lazy load video components using dynamic imports\r\n        const VideoComponent = lazy(() => import('./Video'));\r\n\r\n        const preloadLink = document.createElement('link');\r\n        preloadLink.rel = 'preload';\r\n        preloadLink.as = 'video';\r\n        preloadLink.href = [nature3, eye2, me2][Math.floor(Math.random() * 3)]; // Choose a random video source\r\n        document.head.appendChild(preloadLink);\r\n\r\n        videoElements.push({\r\n          src: nature3,\r\n          style: generateVideoStyles(i),\r\n          delay,\r\n          component: VideoComponent,\r\n        });\r\n\r\n        videoElements.push({\r\n          src: eye2,\r\n          style: generateVideoStyles(i),\r\n          delay,\r\n          component: VideoComponent,\r\n        });\r\n\r\n        videoElements.push({\r\n          src: me2,\r\n          style: generateVideoStyles(i),\r\n          delay,\r\n          component: VideoComponent,\r\n        });\r\n      }\r\n\r\n      setVideos(videoElements);\r\n    };\r\n\r\n    createVideos();\r\n  }, []);\r\nuseEffect(() => {\r\n  const handleResize = () => {\r\n    const newVideos = videos.map((video) => ({\r\n      ...video,\r\n      style: generateVideoStyles(video.style), // Re-generate styles based on new window dimensions\r\n    }));\r\n    setVideos(newVideos);\r\n  };\r\n\r\n  window.addEventListener('resize', handleResize);\r\n\r\n  return () => window.removeEventListener('resize', handleResize);\r\n}, [videos]);\r\n\r\n  return (\r\n    <section className=\"video-container\">\r\n      {videos.map((video, index) => (\r\n        <Suspense key={index} fallback={<div></div>}>\r\n          <video.component key={index} {...video} autoPlay muted loop />\r\n        </Suspense>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Sample;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,OAAO;AAClE,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAO,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMc,cAAc,GAAG,EAAE,CAAC,CAAC;EAC3B,MAAMC,YAAY,GAAG,GAAG,CAAC,CAAC;EAC1B,MAAMC,kBAAkB,GAAG,GAAG,CAAC,CAAC;;EAEhC,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;IACrC,MAAMC,MAAM,GAAG,GAAG,CAAC,CAAC;IACpB,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACP,YAAY,EAAEQ,MAAM,CAACC,UAAU,CAAC,CAAC,CAAC;IAC5D,MAAMC,YAAY,GAAIC,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC,CAACC,YAAY,GAAE,GAAI,CAAC,CAAC;IAC5E,MAAMC,SAAS,GAAGR,IAAI,CAACC,GAAG,CAACP,YAAY,EAAEQ,MAAM,CAACO,WAAW,GAAGL,YAAY,GAAGN,MAAM,CAAC,CAAC,CAAC;;IAEtF,MAAMY,KAAK,GAAGV,IAAI,CAACW,KAAK,CAACX,IAAI,CAACY,MAAM,CAAC,CAAC,GAAIb,QAAS,CAAC,GAAG,GAAG,CAAC,CAAC;IAC5D,MAAMc,MAAM,GAAGb,IAAI,CAACW,KAAK,CAACX,IAAI,CAACY,MAAM,CAAC,CAAC,IAAIJ,SAAS,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;;IAEpE;IACA,MAAMM,MAAM,GAAGZ,MAAM,CAACO,WAAW,GAAGI,MAAM,GAAGf,MAAM;IACnD;IACA,MAAMiB,GAAG,GAAGf,IAAI,CAACW,KAAK,CAACX,IAAI,CAACY,MAAM,CAAC,CAAC,IAAIE,MAAM,GAAG,CAAC,CAAC,GAAGV,YAAY,CAAC;IAEnE,MAAMY,IAAI,GAAGhB,IAAI,CAACW,KAAK,CAACX,IAAI,CAACY,MAAM,CAAC,CAAC,IAAIV,MAAM,CAACC,UAAU,GAAGO,KAAK,CAAC,CAAC;IACpE,MAAMO,MAAM,GAAGjB,IAAI,CAACW,KAAK,CAACX,IAAI,CAACY,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEnD,OAAO;MAAEF,KAAK;MAAEG,MAAM;MAAEE,GAAG;MAAEC,IAAI;MAAEC;IAAO,CAAC;EAC7C,CAAC;EAEDrC,SAAS,CAAC,MAAM;IACd,MAAMsC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,aAAa,GAAG,EAAE;MACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG3B,cAAc,EAAE2B,CAAC,EAAE,EAAE;QACvC,MAAMC,KAAK,GAAGrB,IAAI,CAACW,KAAK,CAACX,IAAI,CAACY,MAAM,CAAC,CAAC,IAAInB,cAAc,GAAGE,kBAAkB,CAAC,CAAC,CAAC,CAAC;;QAEjF;QACA,MAAM2B,cAAc,gBAAGzC,IAAI,CAAC,MAAM,MAAM,CAAC,SAAS,CAAC,CAAC;QAEpD,MAAM0C,WAAW,GAAGlB,QAAQ,CAACmB,aAAa,CAAC,MAAM,CAAC;QAClDD,WAAW,CAACE,GAAG,GAAG,SAAS;QAC3BF,WAAW,CAACG,EAAE,GAAG,OAAO;QACxBH,WAAW,CAACI,IAAI,GAAG,CAAC5C,OAAO,EAAEC,IAAI,EAAEE,GAAG,CAAC,CAACc,IAAI,CAACW,KAAK,CAACX,IAAI,CAACY,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACxEP,QAAQ,CAACuB,IAAI,CAACC,WAAW,CAACN,WAAW,CAAC;QAEtCJ,aAAa,CAACW,IAAI,CAAC;UACjBC,GAAG,EAAEhD,OAAO;UACZiD,KAAK,EAAEpC,mBAAmB,CAACwB,CAAC,CAAC;UAC7BC,KAAK;UACLY,SAAS,EAAEX;QACb,CAAC,CAAC;QAEFH,aAAa,CAACW,IAAI,CAAC;UACjBC,GAAG,EAAE/C,IAAI;UACTgD,KAAK,EAAEpC,mBAAmB,CAACwB,CAAC,CAAC;UAC7BC,KAAK;UACLY,SAAS,EAAEX;QACb,CAAC,CAAC;QAEFH,aAAa,CAACW,IAAI,CAAC;UACjBC,GAAG,EAAE7C,GAAG;UACR8C,KAAK,EAAEpC,mBAAmB,CAACwB,CAAC,CAAC;UAC7BC,KAAK;UACLY,SAAS,EAAEX;QACb,CAAC,CAAC;MACJ;MAEA9B,SAAS,CAAC2B,aAAa,CAAC;IAC1B,CAAC;IAEDD,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EACRtC,SAAS,CAAC,MAAM;IACd,MAAMsD,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,SAAS,GAAG5C,MAAM,CAAC6C,GAAG,CAAEC,KAAK,KAAM;QACvC,GAAGA,KAAK;QACRL,KAAK,EAAEpC,mBAAmB,CAACyC,KAAK,CAACL,KAAK,CAAC,CAAE;MAC3C,CAAC,CAAC,CAAC;;MACHxC,SAAS,CAAC2C,SAAS,CAAC;IACtB,CAAC;IAEDjC,MAAM,CAACoC,gBAAgB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IAE/C,OAAO,MAAMhC,MAAM,CAACqC,mBAAmB,CAAC,QAAQ,EAAEL,YAAY,CAAC;EACjE,CAAC,EAAE,CAAC3C,MAAM,CAAC,CAAC;EAEV,oBACEH,OAAA;IAASoD,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EACjClD,MAAM,CAAC6C,GAAG,CAAC,CAACC,KAAK,EAAExC,KAAK,kBACvBT,OAAA,CAACN,QAAQ;MAAa4D,QAAQ,eAAEtD,OAAA;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAE;MAAAL,QAAA,eAC1CrD,OAAA,CAACiD,KAAK,CAACJ,SAAS;QAAA,GAAiBI,KAAK;QAAEU,QAAQ;QAACC,KAAK;QAACC,IAAI;MAAA,GAArCpD,KAAK;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC;IAAC,GADjDjD,KAAK;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd,CAAC;AAACxD,EAAA,CA3FID,MAAM;AAAA6D,EAAA,GAAN7D,MAAM;AA6FZ,eAAeA,MAAM;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}