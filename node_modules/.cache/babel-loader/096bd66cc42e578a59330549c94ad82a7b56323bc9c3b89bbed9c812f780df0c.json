{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dahlia\\\\Documents\\\\my-website\\\\my-app\\\\src\\\\components\\\\HeroSection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/HeroSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeroSection = () => {\n  _s();\n  const [text, setText] = useState('');\n  const sentences = [' is a Software Engineer based out of Seattle, Washington.', 'Showcasing Your Awesome Work', 'Get Started'];\n  const speed = 100; // Typing speed in milliseconds\n\n  useEffect(() => {\n    let index = 0;\n    let currentText = '';\n    let isDeleting = false;\n\n    // Function to type out a sentence without backspacing\n    const typeWithoutBackspace = sentence => {\n      let charIndex = 0;\n      const typingInterval = setInterval(() => {\n        currentText += sentence.charAt(charIndex);\n        setText(currentText);\n        charIndex++;\n        if (charIndex === sentence.length) {\n          clearInterval(typingInterval);\n          setTimeout(() => {\n            isDeleting = true;\n            setText(currentText);\n            setTimeout(() => {\n              isDeleting = false;\n              type();\n            }, 2000); // Wait before deleting\n          }, 1000); // Wait after typing\n        }\n      }, speed);\n    };\n\n    // Function to type out and backspace sentences\n    const type = () => {\n      const currentSentence = sentences[index % sentences.length];\n      if (!isDeleting) {\n        currentText = currentSentence.substring(0, currentText.length + 1);\n        setText(currentText);\n        if (currentText === currentSentence) {\n          isDeleting = true;\n          setTimeout(type, 2000); // Wait before deleting\n        }\n      } else {\n        currentText = currentSentence.substring(0, currentText.length - 1);\n        setText(currentText);\n        if (currentText === '') {\n          isDeleting = false;\n          index++;\n          typeWithoutBackspace('Dahlia Xie');\n        }\n      }\n    };\n    type();\n    return () => clearTimeout(type);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"hero-section\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"headline\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"name\",\n        children: \"Dahlia Xie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), text]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(HeroSection, \"4ujWDM02ns4tez/JXYjL1bw6ipA=\");\n_c = HeroSection;\nexport default HeroSection;\nvar _c;\n$RefreshReg$(_c, \"HeroSection\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","HeroSection","_s","text","setText","sentences","speed","index","currentText","isDeleting","typeWithoutBackspace","sentence","charIndex","typingInterval","setInterval","charAt","length","clearInterval","setTimeout","type","currentSentence","substring","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dahlia/Documents/my-website/my-app/src/components/HeroSection.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../styles/HeroSection.css';\r\n\r\nconst HeroSection = () => {\r\n  const [text, setText] = useState('');\r\n  const sentences = [\r\n    ' is a Software Engineer based out of Seattle, Washington.',\r\n    'Showcasing Your Awesome Work',\r\n    'Get Started'\r\n  ];\r\n  const speed = 100; // Typing speed in milliseconds\r\n\r\n  useEffect(() => {\r\n    let index = 0;\r\n    let currentText = '';\r\n    let isDeleting = false;\r\n\r\n    // Function to type out a sentence without backspacing\r\n    const typeWithoutBackspace = (sentence) => {\r\n      let charIndex = 0;\r\n      const typingInterval = setInterval(() => {\r\n        currentText += sentence.charAt(charIndex);\r\n        setText(currentText);\r\n        charIndex++;\r\n        if (charIndex === sentence.length) {\r\n          clearInterval(typingInterval);\r\n          setTimeout(() => {\r\n            isDeleting = true;\r\n            setText(currentText);\r\n            setTimeout(() => {\r\n              isDeleting = false;\r\n              type();\r\n            }, 2000); // Wait before deleting\r\n          }, 1000); // Wait after typing\r\n        }\r\n      }, speed);\r\n    };\r\n\r\n    // Function to type out and backspace sentences\r\n    const type = () => {\r\n      const currentSentence = sentences[index % sentences.length];\r\n      if (!isDeleting) {\r\n        currentText = currentSentence.substring(0, currentText.length + 1);\r\n        setText(currentText);\r\n        if (currentText === currentSentence) {\r\n          isDeleting = true;\r\n          setTimeout(type, 2000); // Wait before deleting\r\n        }\r\n      } else {\r\n        currentText = currentSentence.substring(0, currentText.length - 1);\r\n        setText(currentText);\r\n        if (currentText === '') {\r\n          isDeleting = false;\r\n          index++;\r\n          typeWithoutBackspace('Dahlia Xie');\r\n        }\r\n      }\r\n    };\r\n\r\n    type();\r\n\r\n    return () => clearTimeout(type);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"hero-section\">\r\n      <h1 className=\"headline\">\r\n        <span className=\"name\">Dahlia Xie</span>{text}\r\n      </h1>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HeroSection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}