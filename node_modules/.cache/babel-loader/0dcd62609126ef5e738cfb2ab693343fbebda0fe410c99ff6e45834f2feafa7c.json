{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dahlia\\\\Documents\\\\dahliaxie.github.io\\\\src\\\\components\\\\ASCIIAnimation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport '../styles/Ascii.css';\nimport loadingGif from '../videos/loading2.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ASCIIAnimation = ({\n  videoPath,\n  fps,\n  charsWidth,\n  color\n}) => {\n  _s();\n  var _videoRef$current, _videoRef$current2;\n  const videoRef = useRef(null);\n  const asciiRef = useRef(null);\n  const pixels = \"@%#*+=-:;~<>^()_{}|\\\\/?,.`\\\"\";\n  const [frames, setFrames] = useState([]);\n  const [loading, setLoading] = useState(true); // Track loading state\n  const [processedFrames, setProcessedFrames] = useState(0); // Track the number of processed frames\n  const [fadeIn, setFadeIn] = useState(false); // Track whether to fade in the ASCII animation\n\n  const generateAsciiFrames = useCallback(async () => {\n    const video = videoRef.current;\n    let localFrames = [];\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    const frameInterval = 1 / fps;\n    const totalFrames = Math.ceil(video.duration * fps);\n    for (let i = 0; i < totalFrames; i++) {\n      const currentTime = i * frameInterval;\n      video.currentTime = currentTime;\n      await new Promise(resolve => {\n        video.onseeked = () => {\n          video.pause();\n          resolve();\n        };\n      });\n      const asciiWidth = charsWidth;\n      const aspectRatio = video.videoWidth / video.videoHeight;\n      const asciiHeight = Math.floor(asciiWidth / (2 * aspectRatio));\n      canvas.width = asciiWidth;\n      canvas.height = asciiHeight;\n      console.log(\"canvas width = \" + canvas.width);\n      console.log(\"canvas height = \" + canvas.height);\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n      const imgData = context.getImageData(0, 0, canvas.width, canvas.height);\n      let asciiString = '';\n      for (let y = 0; y < canvas.height; y++) {\n        for (let x = 0; x < canvas.width; x++) {\n          const index = 4 * (y * canvas.width + x);\n          const [r, g, b] = imgData.data.slice(index, index + 3);\n          const gray = Math.round(0.299 * r + 0.587 * g + 0.114 * b);\n          const char = pixels[Math.floor(gray / 255 * (pixels.length - 1))];\n          asciiString += char;\n        }\n        asciiString += '\\n';\n      }\n      localFrames.push(asciiString);\n      setProcessedFrames(i + 1); // Update the number of processed frames\n    }\n    setFrames(localFrames);\n    setLoading(false); // Set loading to false when frames are loaded\n    setFadeIn(true); // Trigger fade in animation\n  }, [charsWidth, fps, pixels]);\n  const generateCharsAnimation = useCallback(() => {\n    let currentFrame = 0;\n    const totalFrames = frames.length;\n    const animate = () => {\n      if (totalFrames > 0) {\n        asciiRef.current.innerText = frames[currentFrame];\n        currentFrame = (currentFrame + 1) % totalFrames;\n        setTimeout(animate, 1000 / fps);\n      }\n    };\n    animate();\n  }, [frames, fps]);\n  useEffect(() => {\n    const video = videoRef.current;\n    const handleVideoLoad = () => {\n      generateAsciiFrames().catch(error => console.error('Error generating ASCII frames:', error));\n    };\n    video.addEventListener('loadeddata', handleVideoLoad);\n    return () => {\n      video.removeEventListener('loadeddata', handleVideoLoad);\n    };\n  }, [generateAsciiFrames]);\n  useEffect(() => {\n    if (frames.length > 0) {\n      generateCharsAnimation();\n    }\n  }, [frames, generateCharsAnimation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: loadingGif,\n        alt: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), Math.ceil(((_videoRef$current = videoRef.current) === null || _videoRef$current === void 0 ? void 0 : _videoRef$current.duration) * fps) ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Processing Frames: \", processedFrames, \"/\", Math.ceil(((_videoRef$current2 = videoRef.current) === null || _videoRef$current2 === void 0 ? void 0 : _videoRef$current2.duration) * fps)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) // Display loading icon while frames are loading\n    : /*#__PURE__*/_jsxDEV(\"pre\", {\n      ref: asciiRef,\n      className: \"ascii-body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      src: videoPath,\n      crossOrigin: \"anonymous\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(ASCIIAnimation, \"7eKfGb8eswtts7gpzX3SR84Rf80=\");\n_c = ASCIIAnimation;\nexport default ASCIIAnimation;\nvar _c;\n$RefreshReg$(_c, \"ASCIIAnimation\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","loadingGif","jsxDEV","_jsxDEV","ASCIIAnimation","videoPath","fps","charsWidth","color","_s","_videoRef$current","_videoRef$current2","videoRef","asciiRef","pixels","frames","setFrames","loading","setLoading","processedFrames","setProcessedFrames","fadeIn","setFadeIn","generateAsciiFrames","video","current","localFrames","canvas","document","createElement","context","getContext","willReadFrequently","frameInterval","totalFrames","Math","ceil","duration","i","currentTime","Promise","resolve","onseeked","pause","asciiWidth","aspectRatio","videoWidth","videoHeight","asciiHeight","floor","width","height","console","log","drawImage","imgData","getImageData","asciiString","y","x","index","r","g","b","data","slice","gray","round","char","length","push","generateCharsAnimation","currentFrame","animate","innerText","setTimeout","handleVideoLoad","catch","error","addEventListener","removeEventListener","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","crossOrigin","style","display","_c","$RefreshReg$"],"sources":["C:/Users/Dahlia/Documents/dahliaxie.github.io/src/components/ASCIIAnimation.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport '../styles/Ascii.css';\r\nimport loadingGif from '../videos/loading2.gif';\r\n\r\nconst ASCIIAnimation = ({ videoPath, fps, charsWidth, color }) => {\r\n  const videoRef = useRef(null);\r\n  const asciiRef = useRef(null);\r\n  const pixels = \"@%#*+=-:;~<>^()_{}|\\\\/?,.`\\\"\";\r\n  const [frames, setFrames] = useState([]);\r\n  const [loading, setLoading] = useState(true); // Track loading state\r\n  const [processedFrames, setProcessedFrames] = useState(0); // Track the number of processed frames\r\n  const [fadeIn, setFadeIn] = useState(false); // Track whether to fade in the ASCII animation\r\n\r\n  const generateAsciiFrames = useCallback(async () => {\r\n    const video = videoRef.current;\r\n    let localFrames = [];\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d', { willReadFrequently: true });\r\n    const frameInterval = 1 / fps;\r\n    const totalFrames = Math.ceil(video.duration * fps);\r\n\r\n    for (let i = 0; i < totalFrames; i++) {\r\n      const currentTime = i * frameInterval;\r\n      video.currentTime = currentTime;\r\n\r\n      await new Promise(resolve => {\r\n        video.onseeked = () => {\r\n          video.pause();\r\n          resolve();\r\n        };\r\n      });\r\n\r\n      const asciiWidth = charsWidth;\r\n      const aspectRatio = video.videoWidth / video.videoHeight;\r\n      const asciiHeight = Math.floor(asciiWidth / (2 * aspectRatio));\r\n\r\n      canvas.width = asciiWidth;\r\n      canvas.height = asciiHeight;\r\n      console.log(\"canvas width = \"+ canvas.width);\r\n      console.log(\"canvas height = \"+canvas.height);\r\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n      const imgData = context.getImageData(0, 0, canvas.width, canvas.height);\r\n      let asciiString = '';\r\n\r\n      for (let y = 0; y < canvas.height; y++) {\r\n        for (let x = 0; x < canvas.width; x++) {\r\n          const index = 4 * (y * canvas.width + x);\r\n          const [r, g, b] = imgData.data.slice(index, index + 3);\r\n          const gray = Math.round(0.299 * r + 0.587 * g + 0.114 * b);\r\n          const char = pixels[Math.floor((gray / 255) * (pixels.length - 1))];\r\n          asciiString += char;\r\n        }\r\n        asciiString += '\\n';\r\n      }\r\n\r\n      localFrames.push(asciiString);\r\n      setProcessedFrames(i + 1); // Update the number of processed frames\r\n    }\r\n\r\n    setFrames(localFrames);\r\n    setLoading(false); // Set loading to false when frames are loaded\r\n    setFadeIn(true); // Trigger fade in animation\r\n  }, [charsWidth, fps, pixels]);\r\n\r\n  const generateCharsAnimation = useCallback(() => {\r\n    let currentFrame = 0;\r\n    const totalFrames = frames.length;\r\n\r\n    const animate = () => {\r\n      if (totalFrames > 0) {\r\n        asciiRef.current.innerText = frames[currentFrame];\r\n        currentFrame = (currentFrame + 1) % totalFrames;\r\n        setTimeout(animate, 1000 / fps);\r\n      }\r\n    };\r\n\r\n    animate();\r\n  }, [frames, fps]);\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n\r\n    const handleVideoLoad = () => {\r\n      generateAsciiFrames().catch(error => console.error('Error generating ASCII frames:', error));\r\n    };\r\n\r\n    video.addEventListener('loadeddata', handleVideoLoad);\r\n\r\n    return () => {\r\n      video.removeEventListener('loadeddata', handleVideoLoad);\r\n    };\r\n  }, [generateAsciiFrames]);\r\n\r\n  useEffect(() => {\r\n    if (frames.length > 0) {\r\n      generateCharsAnimation();\r\n    }\r\n  }, [frames, generateCharsAnimation]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div className=\"loading\">\r\n          <img src={loadingGif} alt=\"Loading...\" />\r\n          {Math.ceil(videoRef.current?.duration * fps) ? (\r\n            <p>Processing Frames: {processedFrames}/{Math.ceil(videoRef.current?.duration * fps)}</p>\r\n          ) : (<p></p>)}\r\n        </div> // Display loading icon while frames are loading\r\n      ) : (\r\n        <pre ref={asciiRef} className=\"ascii-body\" />\r\n      )}\r\n      <video ref={videoRef} src={videoPath} crossOrigin=\"anonymous\" style={{ display: 'none' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ASCIIAnimation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}