{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dahlia\\\\Documents\\\\my-website\\\\my-app\\\\src\\\\components\\\\ExperienceItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExperienceItem = ({\n  experiences\n}) => {\n  _s();\n  var _experiences$text, _experiences$responsi;\n  // Similar to HeroSection, manage text and cursor state\n  const [text, setText] = useState('');\n  const [showCursor, setShowCursor] = useState(false);\n\n  // Define typing speed and blinking speed\n  const typingSpeed = 100;\n  const cursorBlinkSpeed = 500;\n  useEffect(() => {\n    let currentText = '';\n    let index = 0;\n    const typeWriter = () => {\n      if (!(experiences !== null && experiences !== void 0 && experiences.text)) return; // Exit if text is empty\n\n      currentText = experiences.text.substring(0, index + 1);\n      setText(currentText);\n      index++;\n      if (index > experiences.text.length) {\n        clearInterval(intervalId);\n        setShowCursor(true);\n      }\n    };\n    const intervalId = setInterval(typeWriter, typingSpeed);\n    return () => clearInterval(intervalId);\n  }, [experiences]);\n  useEffect(() => {\n    const cursorInterval = setInterval(() => {\n      setShowCursor(prevState => !prevState);\n    }, cursorBlinkSpeed);\n    return () => clearInterval(cursorInterval);\n  }, []);\n\n  // Function to format company name and link (assuming company has a website property)\n  const formatCompanyName = (companyName, website) => {\n    if (!website) return companyName; // Handle missing website\n\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: website,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: companyName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"experience-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: experiences === null || experiences === void 0 ? void 0 : experiences.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: experiences === null || experiences === void 0 ? void 0 : experiences.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: experiences === null || experiences === void 0 ? void 0 : (_experiences$text = experiences.text) === null || _experiences$text === void 0 ? void 0 : _experiences$text.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: experiences === null || experiences === void 0 ? void 0 : (_experiences$responsi = experiences.responsibilities) === null || _experiences$responsi === void 0 ? void 0 : _experiences$responsi.map((responsibility, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: responsibility\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"cursor\",\n      style: {\n        display: showCursor ? 'inline' : 'none'\n      },\n      children: \"|\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ExperienceItem, \"zeOrEYNRrrELmZpJJ/GkMZS48YY=\");\n_c = ExperienceItem;\nexport default ExperienceItem;\nvar _c;\n$RefreshReg$(_c, \"ExperienceItem\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ExperienceItem","experiences","_s","_experiences$text","_experiences$responsi","text","setText","showCursor","setShowCursor","typingSpeed","cursorBlinkSpeed","currentText","index","typeWriter","substring","length","clearInterval","intervalId","setInterval","cursorInterval","prevState","formatCompanyName","companyName","website","href","target","rel","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","date","split","map","line","responsibilities","responsibility","style","display","_c","$RefreshReg$"],"sources":["C:/Users/Dahlia/Documents/my-website/my-app/src/components/ExperienceItem.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ExperienceItem = ({ experiences }) => {\r\n  // Similar to HeroSection, manage text and cursor state\r\n  const [text, setText] = useState('');\r\n  const [showCursor, setShowCursor] = useState(false);\r\n\r\n  // Define typing speed and blinking speed\r\n  const typingSpeed = 100;\r\n  const cursorBlinkSpeed = 500;\r\n\r\n  useEffect(() => {\r\n    let currentText = '';\r\n    let index = 0;\r\n\r\n    const typeWriter = () => {\r\n      if (!experiences?.text) return; // Exit if text is empty\r\n\r\n      currentText = experiences.text.substring(0, index + 1);\r\n      setText(currentText);\r\n      index++;\r\n      if (index > experiences.text.length) {\r\n        clearInterval(intervalId);\r\n        setShowCursor(true);\r\n      }\r\n    };\r\n\r\n    const intervalId = setInterval(typeWriter, typingSpeed);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [experiences]);\r\n\r\n  useEffect(() => {\r\n    const cursorInterval = setInterval(() => {\r\n      setShowCursor(prevState => !prevState);\r\n    }, cursorBlinkSpeed);\r\n\r\n    return () => clearInterval(cursorInterval);\r\n  }, []);\r\n\r\n  // Function to format company name and link (assuming company has a website property)\r\n  const formatCompanyName = (companyName, website) => {\r\n    if (!website) return companyName; // Handle missing website\r\n\r\n    return (\r\n      <a href={website} target=\"_blank\" rel=\"noreferrer\">\r\n        {companyName}\r\n      </a>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"experience-item\">\r\n      <h3>{experiences?.title}</h3>\r\n      <h4>{experiences?.date}</h4>\r\n      <p>\r\n        {experiences?.text?.split('\\n').map((line, index) => (\r\n          <span key={index}>\r\n            {line}\r\n            <br />\r\n          </span>\r\n        ))}\r\n      </p>\r\n      <ul>\r\n        {experiences?.responsibilities?.map((responsibility, index) => (\r\n          <li key={index}>{responsibility}</li>\r\n        ))}\r\n      </ul>\r\n      <span className=\"cursor\" style={{ display: showCursor ? 'inline' : 'none' }}>\r\n        |\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExperienceItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}