{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dahlia\\\\Documents\\\\my-website\\\\my-app\\\\src\\\\components\\\\ContactForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/ContactForm.css'; // Assuming ContactForm.css holds styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const [isSubmitted, setIsSubmitted] = useState(false); // Track form submission state\n\n  const handleChange = event => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n  const validateEmail = email => {\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Simple email validation regex\n    return regex.test(email);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Validation\n    if (!formData.name || !formData.email || !validateEmail(formData.email)) {\n      console.error('Validation failed: Name, email, and valid email are required.');\n      return; // Prevent form submission if validation fails\n    }\n\n    // Handle form submission here (e.g., send data to server)\n    console.log('Form Submitted:', formData);\n    setIsSubmitted(true); // Set submitted state for confirmation message\n    setFormData({\n      name: '',\n      email: '',\n      message: ''\n    }); // Clear form after submit\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"contact-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      value: formData.name,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      name: \"email\",\n      value: formData.email,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"message\",\n      children: \"Message:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"message\",\n      name: \"message\",\n      value: formData.message,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"confirmation-message\",\n      children: \"Thank you for your message! We will get back to you soon.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactForm, \"2TGCyPP3eYwLK1KxqpWDASGlMWk=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ContactForm","_s","formData","setFormData","name","email","message","isSubmitted","setIsSubmitted","handleChange","event","target","value","validateEmail","regex","test","handleSubmit","preventDefault","console","error","log","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/Dahlia/Documents/my-website/my-app/src/components/ContactForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/ContactForm.css' // Assuming ContactForm.css holds styles\r\n\r\nconst ContactForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    message: '',\r\n  });\r\n\r\n  const [isSubmitted, setIsSubmitted] = useState(false); // Track form submission state\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({ ...formData, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Simple email validation regex\r\n    return regex.test(email);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Validation\r\n    if (!formData.name || !formData.email || !validateEmail(formData.email)) {\r\n      console.error('Validation failed: Name, email, and valid email are required.');\r\n      return; // Prevent form submission if validation fails\r\n    }\r\n\r\n    // Handle form submission here (e.g., send data to server)\r\n    console.log('Form Submitted:', formData);\r\n    setIsSubmitted(true); // Set submitted state for confirmation message\r\n    setFormData({ name: '', email: '', message: '' }); // Clear form after submit\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"contact-form\">\r\n      {/* Name Input */}\r\n      <label htmlFor=\"name\">Name:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"name\"\r\n        name=\"name\"\r\n        value={formData.name}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      {/* Email Input */}\r\n      <label htmlFor=\"email\">Email:</label>\r\n      <input\r\n        type=\"email\"\r\n        id=\"email\"\r\n        name=\"email\"\r\n        value={formData.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      {/* Message TextArea */}\r\n      <label htmlFor=\"message\">Message:</label>\r\n      <textarea\r\n        id=\"message\"\r\n        name=\"message\"\r\n        value={formData.message}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      {/* Submit Button */}\r\n      <button type=\"submit\">Send Message</button>\r\n\r\n      {/* Confirmation Message (conditionally rendered) */}\r\n      {isSubmitted && (\r\n        <p className=\"confirmation-message\">\r\n          Thank you for your message! We will get back to you soon.\r\n        </p>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}