{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dahlia\\\\Documents\\\\my-website\\\\my-app\\\\src\\\\pages\\\\Experience.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Experience.css'; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fullExperienceText = `\n    From **<a href=\"https://www.neopets.com/\">Neopets</a>** avatar customization to building real-world tech, a B.S. in Software Engineering and minor in Digital Technology fueled my passion to bridge the gap between code and design. \n    My internship journey began with building a health check monitor for microservices at **<a href=\"https://www.eagleview.com/\">Eagleview</a>**. \n    At **<a href=\"https://www.libertymutual.com/\">Liberty Mutual</a>**, I merged code and design by crafting a landing page and icons for their Mainframe team. \n    **<a href=\"https://www.chasecostmanagement.com/\">Chase Cost Management</a>** saw me tackle user interfaces and build a client portal to help users visualize their savings data. \n    **<a href=\"https://www.poatek.com/\">Poatek IT Consulting</a>** honed my skills in automating project tracking with APIs, and finally, at **<a href=\"https://www.inwardhq.com/\">Inward</a>**, I streamlined data analysis, ensuring valuable insights were readily available.\n  `;\nconst Experience = () => {\n  _s();\n  const [typedText, setTypedText] = useState('');\n  const [cursorVisible, setCursorVisible] = useState(false);\n  const typingSpeed = 100; // Adjust typing speed in milliseconds\n\n  useEffect(() => {\n    let index = 0;\n    let currentText = '';\n    const type = () => {\n      currentText = fullExperienceText.substring(0, index + 1);\n      setTypedText(currentText);\n      index++;\n      if (index > fullExperienceText.length) {\n        clearInterval(intervalId);\n        setCursorVisible(true);\n      }\n    };\n    const intervalId = setInterval(type, typingSpeed);\n    return () => clearInterval(intervalId);\n  }, []);\n  useEffect(() => {\n    const cursorInterval = setInterval(() => {\n      setCursorVisible(prevVisible => !prevVisible);\n    }, 500); // Adjust blinking speed in milliseconds\n\n    return () => clearInterval(cursorInterval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"experience-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"EXPERIENCE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"experience-text\",\n      children: [typedText, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `cursor ${cursorVisible ? 'visible' : 'hidden'}`,\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Experience, \"LuGMLrUomYn2daxt02Dk7eCmECw=\");\n_c = Experience;\nexport default Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","fullExperienceText","Experience","_s","typedText","setTypedText","cursorVisible","setCursorVisible","typingSpeed","index","currentText","type","substring","length","clearInterval","intervalId","setInterval","cursorInterval","prevVisible","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dahlia/Documents/my-website/my-app/src/pages/Experience.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/Experience.css'; // Adjust the path as needed\r\n\r\n  const fullExperienceText = `\r\n    From **<a href=\"https://www.neopets.com/\">Neopets</a>** avatar customization to building real-world tech, a B.S. in Software Engineering and minor in Digital Technology fueled my passion to bridge the gap between code and design. \r\n    My internship journey began with building a health check monitor for microservices at **<a href=\"https://www.eagleview.com/\">Eagleview</a>**. \r\n    At **<a href=\"https://www.libertymutual.com/\">Liberty Mutual</a>**, I merged code and design by crafting a landing page and icons for their Mainframe team. \r\n    **<a href=\"https://www.chasecostmanagement.com/\">Chase Cost Management</a>** saw me tackle user interfaces and build a client portal to help users visualize their savings data. \r\n    **<a href=\"https://www.poatek.com/\">Poatek IT Consulting</a>** honed my skills in automating project tracking with APIs, and finally, at **<a href=\"https://www.inwardhq.com/\">Inward</a>**, I streamlined data analysis, ensuring valuable insights were readily available.\r\n  `;\r\nconst Experience = () => {\r\n  const [typedText, setTypedText] = useState('');\r\n  const [cursorVisible, setCursorVisible] = useState(false);\r\n\r\n  const typingSpeed = 100; // Adjust typing speed in milliseconds\r\n\r\n  useEffect(() => {\r\n    let index = 0;\r\n    let currentText = '';\r\n\r\n    const type = () => {\r\n      currentText = fullExperienceText.substring(0, index + 1);\r\n      setTypedText(currentText);\r\n      index++;\r\n      if (index > fullExperienceText.length) {\r\n        clearInterval(intervalId);\r\n        setCursorVisible(true);\r\n      }\r\n    };\r\n\r\n    const intervalId = setInterval(type, typingSpeed);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const cursorInterval = setInterval(() => {\r\n      setCursorVisible((prevVisible) => !prevVisible);\r\n    }, 500); // Adjust blinking speed in milliseconds\r\n\r\n    return () => clearInterval(cursorInterval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"experience-page\">\r\n      <h2>EXPERIENCE</h2>\r\n      <p className=\"experience-text\">\r\n        {typedText}\r\n        <span className={`cursor ${cursorVisible ? 'visible' : 'hidden'}`}>|</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Experience;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,kBAAkB,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMW,WAAW,GAAG,GAAG,CAAC,CAAC;;EAEzBV,SAAS,CAAC,MAAM;IACd,IAAIW,KAAK,GAAG,CAAC;IACb,IAAIC,WAAW,GAAG,EAAE;IAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;MACjBD,WAAW,GAAGT,kBAAkB,CAACW,SAAS,CAAC,CAAC,EAAEH,KAAK,GAAG,CAAC,CAAC;MACxDJ,YAAY,CAACK,WAAW,CAAC;MACzBD,KAAK,EAAE;MACP,IAAIA,KAAK,GAAGR,kBAAkB,CAACY,MAAM,EAAE;QACrCC,aAAa,CAACC,UAAU,CAAC;QACzBR,gBAAgB,CAAC,IAAI,CAAC;MACxB;IACF,CAAC;IAED,MAAMQ,UAAU,GAAGC,WAAW,CAACL,IAAI,EAAEH,WAAW,CAAC;IAEjD,OAAO,MAAMM,aAAa,CAACC,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACd,MAAMmB,cAAc,GAAGD,WAAW,CAAC,MAAM;MACvCT,gBAAgB,CAAEW,WAAW,IAAK,CAACA,WAAW,CAAC;IACjD,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;IAET,OAAO,MAAMJ,aAAa,CAACG,cAAc,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BpB,OAAA;MAAAoB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBxB,OAAA;MAAGmB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAC3BhB,SAAS,eACVJ,OAAA;QAAMmB,SAAS,EAAG,UAASb,aAAa,GAAG,SAAS,GAAG,QAAS,EAAE;QAAAc,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACrB,EAAA,CA1CID,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AA4ChB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}