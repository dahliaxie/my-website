{"ast":null,"code":"import React,{useState}from'react';import'../styles/ContactForm.css';// Assuming ContactForm.css holds styles\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ContactForm=()=>{const[formData,setFormData]=useState({name:'',email:'',message:''});const[isSubmitted,setIsSubmitted]=useState(false);// Track form submission state\nconst handleChange=event=>{setFormData({...formData,[event.target.name]:event.target.value});};const validateEmail=email=>{const regex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;// Simple email validation regex\nreturn regex.test(email);};const handleSubmit=event=>{event.preventDefault();// Validation\nif(!formData.name||!formData.email||!validateEmail(formData.email)){console.error('Validation failed: Name, email, and valid email are required.');return;// Prevent form submission if validation fails\n}// Handle form submission here (e.g., send data to server)\nconsole.log('Form Submitted:',formData);setIsSubmitted(true);// Set submitted state for confirmation message\nsetFormData({name:'',email:'',message:''});// Clear form after submit\n};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"contact-form\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",value:formData.name,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",value:formData.email,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"message\",children:\"Message:\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"message\",name:\"message\",value:formData.message,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send Message\"}),isSubmitted&&/*#__PURE__*/_jsx(\"p\",{className:\"confirmation-message\",children:\"Thank you for your message! We will get back to you soon.\"})]});};export default ContactForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ContactForm","formData","setFormData","name","email","message","isSubmitted","setIsSubmitted","handleChange","event","target","value","validateEmail","regex","test","handleSubmit","preventDefault","console","error","log","onSubmit","className","children","htmlFor","type","id","onChange","required"],"sources":["C:/Users/Dahlia/Documents/my-website/my-app/src/components/ContactForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/ContactForm.css' // Assuming ContactForm.css holds styles\r\n\r\nconst ContactForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    message: '',\r\n  });\r\n\r\n  const [isSubmitted, setIsSubmitted] = useState(false); // Track form submission state\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({ ...formData, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/; // Simple email validation regex\r\n    return regex.test(email);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Validation\r\n    if (!formData.name || !formData.email || !validateEmail(formData.email)) {\r\n      console.error('Validation failed: Name, email, and valid email are required.');\r\n      return; // Prevent form submission if validation fails\r\n    }\r\n\r\n    // Handle form submission here (e.g., send data to server)\r\n    console.log('Form Submitted:', formData);\r\n    setIsSubmitted(true); // Set submitted state for confirmation message\r\n    setFormData({ name: '', email: '', message: '' }); // Clear form after submit\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"contact-form\">\r\n      {/* Name Input */}\r\n      <label htmlFor=\"name\">Name:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"name\"\r\n        name=\"name\"\r\n        value={formData.name}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      {/* Email Input */}\r\n      <label htmlFor=\"email\">Email:</label>\r\n      <input\r\n        type=\"email\"\r\n        id=\"email\"\r\n        name=\"email\"\r\n        value={formData.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      {/* Message TextArea */}\r\n      <label htmlFor=\"message\">Message:</label>\r\n      <textarea\r\n        id=\"message\"\r\n        name=\"message\"\r\n        value={formData.message}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      {/* Submit Button */}\r\n      <button type=\"submit\">Send Message</button>\r\n\r\n      {/* Confirmation Message (conditionally rendered) */}\r\n      {isSubmitted && (\r\n        <p className=\"confirmation-message\">\r\n          Thank you for your message! We will get back to you soon.\r\n        </p>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,2BAA2B,CAAC;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnC,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAAC,CACvCQ,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,EACX,CAAC,CAAC,CAEF,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAE;AAEvD,KAAM,CAAAa,YAAY,CAAIC,KAAK,EAAK,CAC9BP,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAE,CAACQ,KAAK,CAACC,MAAM,CAACP,IAAI,EAAGM,KAAK,CAACC,MAAM,CAACC,KAAM,CAAC,CAAC,CACvE,CAAC,CAED,KAAM,CAAAC,aAAa,CAAIR,KAAK,EAAK,CAC/B,KAAM,CAAAS,KAAK,CAAG,4BAA4B,CAAE;AAC5C,MAAO,CAAAA,KAAK,CAACC,IAAI,CAACV,KAAK,CAAC,CAC1B,CAAC,CAED,KAAM,CAAAW,YAAY,CAAIN,KAAK,EAAK,CAC9BA,KAAK,CAACO,cAAc,CAAC,CAAC,CAEtB;AACA,GAAI,CAACf,QAAQ,CAACE,IAAI,EAAI,CAACF,QAAQ,CAACG,KAAK,EAAI,CAACQ,aAAa,CAACX,QAAQ,CAACG,KAAK,CAAC,CAAE,CACvEa,OAAO,CAACC,KAAK,CAAC,+DAA+D,CAAC,CAC9E,OAAQ;AACV,CAEA;AACAD,OAAO,CAACE,GAAG,CAAC,iBAAiB,CAAElB,QAAQ,CAAC,CACxCM,cAAc,CAAC,IAAI,CAAC,CAAE;AACtBL,WAAW,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAE,CAAEC,OAAO,CAAE,EAAG,CAAC,CAAC,CAAE;AACrD,CAAC,CAED,mBACEN,KAAA,SAAMqB,QAAQ,CAAEL,YAAa,CAACM,SAAS,CAAC,cAAc,CAAAC,QAAA,eAEpDzB,IAAA,UAAO0B,OAAO,CAAC,MAAM,CAAAD,QAAA,CAAC,OAAK,CAAO,CAAC,cACnCzB,IAAA,UACE2B,IAAI,CAAC,MAAM,CACXC,EAAE,CAAC,MAAM,CACTtB,IAAI,CAAC,MAAM,CACXQ,KAAK,CAAEV,QAAQ,CAACE,IAAK,CACrBuB,QAAQ,CAAElB,YAAa,CACvBmB,QAAQ,MACT,CAAC,cAGF9B,IAAA,UAAO0B,OAAO,CAAC,OAAO,CAAAD,QAAA,CAAC,QAAM,CAAO,CAAC,cACrCzB,IAAA,UACE2B,IAAI,CAAC,OAAO,CACZC,EAAE,CAAC,OAAO,CACVtB,IAAI,CAAC,OAAO,CACZQ,KAAK,CAAEV,QAAQ,CAACG,KAAM,CACtBsB,QAAQ,CAAElB,YAAa,CACvBmB,QAAQ,MACT,CAAC,cAGF9B,IAAA,UAAO0B,OAAO,CAAC,SAAS,CAAAD,QAAA,CAAC,UAAQ,CAAO,CAAC,cACzCzB,IAAA,aACE4B,EAAE,CAAC,SAAS,CACZtB,IAAI,CAAC,SAAS,CACdQ,KAAK,CAAEV,QAAQ,CAACI,OAAQ,CACxBqB,QAAQ,CAAElB,YAAa,CACvBmB,QAAQ,MACT,CAAC,cAGF9B,IAAA,WAAQ2B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,cAAY,CAAQ,CAAC,CAG1ChB,WAAW,eACVT,IAAA,MAAGwB,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAAC,2DAEpC,CAAG,CACJ,EACG,CAAC,CAEX,CAAC,CAED,cAAe,CAAAtB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}