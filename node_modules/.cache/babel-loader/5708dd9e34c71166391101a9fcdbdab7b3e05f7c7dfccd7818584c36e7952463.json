{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dahlia\\\\Documents\\\\my-website\\\\my-app\\\\src\\\\components\\\\ContactForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const handleChange = event => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Step 1: Ensure form attributes are correct\n    // Add netlify attribute and form name\n    const form = event.target;\n    formData['form-name'] = form.getAttribute('name');\n\n    // Step 2: Verify unique names for each input field\n    // Check if each input field has a unique name\n\n    // Step 3: Avoid special characters\n    // Ensure attribute values don't contain special characters\n\n    fetch('/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: new URLSearchParams(formData).toString()\n    }).then(() => {\n      // Step 4: Check for thank-you page action\n      // If custom thank-you page, redirect here\n      // If using Netlify's default thank-you page, omit action attribute\n      alert('Success!');\n    }).catch(error => {\n      // Step 5: Debugging errors\n      console.error('Error:', error);\n      alert('Error submitting form. Please try again later.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    name: \"contact\",\n    netlify: true,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      name: \"form-name\",\n      value: \"contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Your Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Your Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Message: \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          value: formData.message,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactForm, \"GZhU/kbub4qheNMNQ7JWGwfJ0vI=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ContactForm","_s","formData","setFormData","name","email","message","handleChange","event","target","value","handleSubmit","preventDefault","form","getAttribute","fetch","method","headers","body","URLSearchParams","toString","then","alert","catch","error","console","onSubmit","netlify","children","type","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Dahlia/Documents/my-website/my-app/src/components/ContactForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ContactForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    message: '',\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({ ...formData, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Step 1: Ensure form attributes are correct\r\n    // Add netlify attribute and form name\r\n    const form = event.target;\r\n    formData['form-name'] = form.getAttribute('name');\r\n\r\n    // Step 2: Verify unique names for each input field\r\n    // Check if each input field has a unique name\r\n\r\n    // Step 3: Avoid special characters\r\n    // Ensure attribute values don't contain special characters\r\n\r\n    fetch('/', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n      body: new URLSearchParams(formData).toString(),\r\n    })\r\n      .then(() => {\r\n        // Step 4: Check for thank-you page action\r\n        // If custom thank-you page, redirect here\r\n        // If using Netlify's default thank-you page, omit action attribute\r\n        alert('Success!');\r\n      })\r\n      .catch((error) => {\r\n        // Step 5: Debugging errors\r\n        console.error('Error:', error);\r\n        alert('Error submitting form. Please try again later.');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} name=\"contact\" netlify>\r\n      {/* Step 2: Add hidden form-name field */}\r\n      <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\r\n      <p>\r\n        <label>\r\n          Your Name: <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} />\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <label>\r\n          Your Email: <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <label>\r\n          Message: <textarea name=\"message\" value={formData.message} onChange={handleChange} />\r\n        </label>\r\n      </p>\r\n      <p>\r\n        <button type=\"submit\">Send</button>\r\n      </p>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}