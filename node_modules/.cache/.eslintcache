[{"C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\index.js":"1","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\App.js":"2","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\pages\\Test.js":"3","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\pages\\Home.js":"4","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\pages\\About.js":"5","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\pages\\Sample.js":"6","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\components\\Header.js":"7","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\components\\FooterBanner.js":"8","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\pages\\Contact.js":"9","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\pages\\Experience.js":"10","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\pages\\Video.js":"11","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\components\\HeroSection.js":"12","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\components\\Wip.js":"13","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\components\\ASCIIAnimation.js":"14","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\components\\ContactForm.js":"15"},{"size":474,"mtime":1716316394976,"results":"16","hashOfConfig":"17"},{"size":1069,"mtime":1716315581895,"results":"18","hashOfConfig":"17"},{"size":1014,"mtime":1716315500291,"results":"19","hashOfConfig":"17"},{"size":357,"mtime":1716315573457,"results":"20","hashOfConfig":"17"},{"size":3967,"mtime":1716315561130,"results":"21","hashOfConfig":"17"},{"size":3695,"mtime":1716315500290,"results":"22","hashOfConfig":"17"},{"size":1130,"mtime":1716315662579,"results":"23","hashOfConfig":"17"},{"size":404,"mtime":1716315653510,"results":"24","hashOfConfig":"17"},{"size":485,"mtime":1716270563591,"results":"25","hashOfConfig":"17"},{"size":2681,"mtime":1716270563647,"results":"26","hashOfConfig":"17"},{"size":433,"mtime":1716315500291,"results":"27","hashOfConfig":"17"},{"size":1344,"mtime":1716315680107,"results":"28","hashOfConfig":"17"},{"size":678,"mtime":1716315690167,"results":"29","hashOfConfig":"17"},{"size":4130,"mtime":1716315500289,"results":"30","hashOfConfig":"17"},{"size":2078,"mtime":1716315643488,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gjup0o",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\index.js",[],[],"C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\App.js",[],[],"C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\pages\\Test.js",["81"],[],"import React, { useState, useEffect } from 'react';\r\nimport ASCIIAnimation from '../components/ASCIIAnimation';\r\nimport nature from '../videos/nature.mp4';\r\n\r\nconst Test = () => {\r\n  const [pageWidth, setPageWidth] = useState(window.innerWidth);\r\n  const [charsWidth, setCharsWidth] = useState(window.innerWidth - 20);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setPageWidth(window.innerWidth);\r\n      setCharsWidth(window.innerWidth - 20); // Adjust this value as needed\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Test\" style={{ width: '100vw', height: '100vh', overflow: 'hidden'}}>\r\n      <div className=\"ascii-container\">\r\n        <div className=\"ascii-body\">\r\n          <ASCIIAnimation videoPath={nature} fps={12} charsWidth={charsWidth} color=\"white\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\pages\\Home.js",[],[],"C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\pages\\About.js",["82"],[],"import React, {useEffect} from 'react';\r\nimport Wip from '../components/Wip'\r\nimport ASCIIAnimation from '../components/ASCIIAnimation';\r\nconst About = () => {\r\n  useEffect(() => {\r\n    // Disable scroll on component mount\r\n    document.body.style.overflow = 'hidden';\r\n\r\n    // Cleanup: Allow scroll on unmount\r\n    return () => {\r\n      document.body.style.overflow = 'auto';\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className= \"about\">\r\n      <Wip/>\r\n\r\n      \r\n      {/* Add information about yourself here\r\n\r\n      <div style={{ fontFamily: 'jgs, sans-serif' }}>Lorem ipsum dolor sit amet (jgs)</div>\r\n      <div style={{ fontFamily: 'jgs-bold, sans-serif' }}>Consectetur adipiscing elit (jgs-bold)</div>\r\n      <div style={{ fontFamily: 'abordage, sans-serif' }}>Sed do eiusmod tempor incididunt (abordage)</div>\r\n      <div style={{ fontFamily: 'basalte-fond, sans-serif' }}>Ut labore et dolore magna aliqua (basalte-fond)</div>\r\n      <div style={{ fontFamily: 'basalte-multicolor, sans-serif' }}>Ut enim ad minim veniam (basalte-multicolor)</div>\r\n      <div style={{ fontFamily: 'basalte-volume, sans-serif' }}>Quis nostrud exercitation ullamco (basalte-volume)</div>\r\n      <div style={{ fontFamily: 'director-bold, sans-serif' }}>Laboris nisi ut aliquip ex ea commodo consequat (director-bold)</div>\r\n      <div style={{ fontFamily: 'director-light, sans-serif' }}>Duis aute irure dolor in reprehenderit (director-light)</div>\r\n      <div style={{ fontFamily: 'director-regular, sans-serif' }}>Excepteur sint occaecat cupidatat non proident (director-regular)</div>\r\n      <div style={{ fontFamily: 'director-variable, sans-serif' }}>Sunt in culpa qui officia deserunt (director-variable)</div>\r\n      <div style={{ fontFamily: 'equateur, sans-serif' }}>Mollit anim id est laborum (equateur)</div>\r\n      <div style={{ fontFamily: 'ft88-bold, sans-serif' }}>Lorem ipsum dolor sit amet (ft88-bold)</div>\r\n      <div style={{ fontFamily: 'ft88-expanded, sans-serif' }}>Consectetur adipiscing elit (ft88-expanded)</div>\r\n      <div style={{ fontFamily: 'ft88-gothique, sans-serif' }}>Sed do eiusmod tempor incididunt (ft88-gothique)</div>\r\n      <div style={{ fontFamily: 'ft88-italic, sans-serif' }}>Ut labore et dolore magna aliqua (ft88-italic)</div>\r\n      <div style={{ fontFamily: 'ft88, sans-serif' }}>Ut enim ad minim veniam (ft88)</div>\r\n      <div style={{ fontFamily: 'ft88-school, sans-serif' }}>Quis nostrud exercitation ullamco (ft88-school)</div>\r\n      <div style={{ fontFamily: 'ft88-serif, sans-serif' }}>Excepteur sint occaecat cupidatat non proident (ft88-serif)</div>\r\n      <div style={{ fontFamily: 'latitude, sans-serif' }}>Sunt in culpa qui officia deserunt (latitude)</div>\r\n      <div style={{ fontFamily: 'louise, sans-serif' }}>Mollit anim id est laborum (louise)</div>\r\n      <div style={{ fontFamily: 'bzd-base, sans-serif' }}>Lorem ipsum dolor sit amet (bzd-base)</div>\r\n      <div style={{ fontFamily: 'bzd-brush, sans-serif' }}>Consectetur adipiscing elit (bzd-brush)</div>\r\n      <div style={{ fontFamily: 'bzd-bubble, sans-serif' }}>Sed do eiusmod tempor incididunt (bzd-bubble)</div>\r\n      <div style={{ fontFamily: 'bzd-cloud, sans-serif' }}>Ut labore et dolore magna aliqua (bzd-cloud)</div>\r\n      <div style={{ fontFamily: 'bzd-cube, sans-serif' }}>Ut enim ad minim veniam (bzd-cube)</div>\r\n      <div style={{ fontFamily: 'bzd-messier, sans-serif' }}>Quis nostrud exercitation ullamco (bzd-messier)</div>\r\n      <div style={{ fontFamily: 'bzd-messy, sans-serif' }}>Excepteur sint occaecat cupidatat non proident (bzd-messy)</div>\r\n      <div style={{ fontFamily: 'bzd-pearl, sans-serif' }}>Sunt in culpa qui officia deserunt (bzd-pearl)</div>\r\n      <div style={{ fontFamily: 'bzd-ring, sans-serif' }}>Mollit anim id est laborum (bzd-ring)</div>\r\n      <div style={{ fontFamily: 'bzd-stitches, sans-serif' }}>Lorem ipsum dolor sit amet (bzd-stitches)</div>\r\n      */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\pages\\Sample.js",["83"],[],"import React, { useState, useEffect, lazy, Suspense } from 'react';\r\nimport nature3 from '../videos/nature3.mp4';\r\nimport eye2 from '../videos/eye2.mp4';\r\nimport eye from '../videos/eye.mp4';\r\nimport me2 from '../videos/me2.mp4';\r\nimport '../styles/Sample.css'\r\n\r\nconst Sample = () => {\r\n  const [videos, setVideos] = useState([]);\r\n  const numberOfVideos = 10; // Adjust this to control the number of videos /2\r\n  const maxVideoSize = 300; // Maximum width and height in pixels\r\n  const delayBetweenVideos = 500; // Delay in milliseconds between video appearances\r\n\r\n  const generateVideoStyles = (index) => {\r\n    const minGap = 100; // Adjust this value for desired spacing\r\n    const maxWidth = Math.min(maxVideoSize, window.innerWidth); // Don't exceed viewport width\r\n    const headerHeight = (document.querySelector('.header').offsetHeight* 0.7); // Get header height\r\n    const maxHeight = Math.min(maxVideoSize, window.innerHeight - headerHeight - minGap); // Adjust for header height\r\n  \r\n    const width = Math.floor(Math.random() * (maxWidth)) + 100; // Random width within limits\r\n    const height = Math.floor(Math.random() * (maxHeight - 100)) + 100; // Random height within limits\r\n  \r\n    // Calculate maximum allowed top position to avoid header overlap\r\n    const maxTop = window.innerHeight - height - minGap;\r\n    // Generate random top position within allowed range (headerHeight to maxTop)\r\n    const top = Math.floor(Math.random() * (maxTop + 1) + headerHeight); \r\n  \r\n    const left = Math.floor(Math.random() * (window.innerWidth - width));\r\n    const zIndex = Math.floor(Math.random() * 10) + 1; // Random z-index for layering\r\n  \r\n    return { width, height, top, left, zIndex };\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const createVideos = async () => {\r\n      const videoElements = [];\r\n      for (let i = 0; i < numberOfVideos; i++) {\r\n        const delay = Math.floor(Math.random() * (numberOfVideos * delayBetweenVideos)); // Random delay within range\r\n\r\n        // Lazy load video components using dynamic imports\r\n        const VideoComponent = lazy(() => import('./Video'));\r\n\r\n        const preloadLink = document.createElement('link');\r\n        preloadLink.rel = 'preload';\r\n        preloadLink.as = 'video';\r\n        preloadLink.href = [nature3, eye2, me2][Math.floor(Math.random() * 3)]; // Choose a random video source\r\n        document.head.appendChild(preloadLink);\r\n\r\n        videoElements.push({\r\n          src: nature3,\r\n          style: generateVideoStyles(i),\r\n          delay,\r\n          component: VideoComponent,\r\n        });\r\n\r\n        videoElements.push({\r\n          src: eye2,\r\n          style: generateVideoStyles(i),\r\n          delay,\r\n          component: VideoComponent,\r\n        });\r\n\r\n        videoElements.push({\r\n          src: me2,\r\n          style: generateVideoStyles(i),\r\n          delay,\r\n          component: VideoComponent,\r\n        });\r\n      }\r\n\r\n      setVideos(videoElements);\r\n    };\r\n\r\n    createVideos();\r\n  }, []);\r\nuseEffect(() => {\r\n  const handleResize = () => {\r\n    const newVideos = videos.map((video) => ({\r\n      ...video,\r\n      style: generateVideoStyles(video.style), // Re-generate styles based on new window dimensions\r\n    }));\r\n    setVideos(newVideos);\r\n  };\r\n\r\n  window.addEventListener('resize', handleResize);\r\n\r\n  return () => window.removeEventListener('resize', handleResize);\r\n}, [videos]);\r\n\r\n  return (\r\n    <section className=\"video-container\">\r\n      {videos.map((video, index) => (\r\n        <Suspense key={index} fallback={<div></div>}>\r\n          <video.component key={index} {...video} autoPlay muted loop />\r\n        </Suspense>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Sample;","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\components\\Header.js",[],[],"C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\components\\FooterBanner.js",[],[],"C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\pages\\Contact.js",[],[],"C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\pages\\Experience.js",[],[],"C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\pages\\Video.js",[],[],"C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\components\\HeroSection.js",[],[],"C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\components\\Wip.js",[],[],"C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\components\\ASCIIAnimation.js",["84"],[],"import React, { useEffect, useRef, useState, useCallback } from 'react';\r\nimport '../styles/Ascii.css';\r\nimport loadingGif from '../videos/loading2.gif';\r\n\r\nconst ASCIIAnimation = ({ videoPath, fps, charsWidth, color }) => {\r\n  const videoRef = useRef(null);\r\n  const asciiRef = useRef(null);\r\n  const pixels = \"@%#*+=-:;~<>^()_{}|\\\\/?,.`\\\"\";\r\n  const [frames, setFrames] = useState([]);\r\n  const [loading, setLoading] = useState(true); // Track loading state\r\n  const [processedFrames, setProcessedFrames] = useState(0); // Track the number of processed frames\r\n  const [fadeIn, setFadeIn] = useState(false); // Track whether to fade in the ASCII animation\r\n\r\n  const generateAsciiFrames = useCallback(async () => {\r\n    const video = videoRef.current;\r\n    let localFrames = [];\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d', { willReadFrequently: true });\r\n    const frameInterval = 1 / fps;\r\n    const totalFrames = Math.ceil(video.duration * fps);\r\n\r\n    for (let i = 0; i < totalFrames; i++) {\r\n      const currentTime = i * frameInterval;\r\n      video.currentTime = currentTime;\r\n\r\n      await new Promise(resolve => {\r\n        video.onseeked = () => {\r\n          video.pause();\r\n          resolve();\r\n        };\r\n      });\r\n\r\n      const asciiWidth = charsWidth;\r\n      const aspectRatio = video.videoWidth / video.videoHeight;\r\n      const asciiHeight = Math.floor(asciiWidth / (2 * aspectRatio));\r\n\r\n      canvas.width = asciiWidth;\r\n      canvas.height = asciiHeight;\r\n      console.log(\"canvas width = \"+ canvas.width);\r\n      console.log(\"canvas height = \"+canvas.height);\r\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n      const imgData = context.getImageData(0, 0, canvas.width, canvas.height);\r\n      let asciiString = '';\r\n\r\n      for (let y = 0; y < canvas.height; y++) {\r\n        for (let x = 0; x < canvas.width; x++) {\r\n          const index = 4 * (y * canvas.width + x);\r\n          const [r, g, b] = imgData.data.slice(index, index + 3);\r\n          const gray = Math.round(0.299 * r + 0.587 * g + 0.114 * b);\r\n          const char = pixels[Math.floor((gray / 255) * (pixels.length - 1))];\r\n          asciiString += char;\r\n        }\r\n        asciiString += '\\n';\r\n      }\r\n\r\n      localFrames.push(asciiString);\r\n      setProcessedFrames(i + 1); // Update the number of processed frames\r\n    }\r\n\r\n    setFrames(localFrames);\r\n    setLoading(false); // Set loading to false when frames are loaded\r\n    setFadeIn(true); // Trigger fade in animation\r\n  }, [charsWidth, fps, pixels]);\r\n\r\n  const generateCharsAnimation = useCallback(() => {\r\n    let currentFrame = 0;\r\n    const totalFrames = frames.length;\r\n\r\n    const animate = () => {\r\n      if (totalFrames > 0) {\r\n        asciiRef.current.innerText = frames[currentFrame];\r\n        currentFrame = (currentFrame + 1) % totalFrames;\r\n        setTimeout(animate, 1000 / fps);\r\n      }\r\n    };\r\n\r\n    animate();\r\n  }, [frames, fps]);\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n\r\n    const handleVideoLoad = () => {\r\n      generateAsciiFrames().catch(error => console.error('Error generating ASCII frames:', error));\r\n    };\r\n\r\n    video.addEventListener('loadeddata', handleVideoLoad);\r\n\r\n    return () => {\r\n      video.removeEventListener('loadeddata', handleVideoLoad);\r\n    };\r\n  }, [generateAsciiFrames]);\r\n\r\n  useEffect(() => {\r\n    if (frames.length > 0) {\r\n      generateCharsAnimation();\r\n    }\r\n  }, [frames, generateCharsAnimation]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div className=\"loading\">\r\n          <img src={loadingGif} alt=\"Loading...\" />\r\n          {Math.ceil(videoRef.current?.duration * fps) ? (\r\n            <p>Processing Frames: {processedFrames}/{Math.ceil(videoRef.current?.duration * fps)}</p>\r\n          ) : (<p></p>)}\r\n        </div> // Display loading icon while frames are loading\r\n      ) : (\r\n        <pre ref={asciiRef} className=\"ascii-body\" />\r\n      )}\r\n      <video ref={videoRef} src={videoPath} crossOrigin=\"anonymous\" style={{ display: 'none' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ASCIIAnimation;\r\n","C:\\Users\\Dahlia\\Documents\\dahliaxie.github.io\\src\\components\\ContactForm.js",[],[],{"ruleId":"85","severity":1,"message":"86","line":6,"column":10,"nodeType":"87","messageId":"88","endLine":6,"endColumn":19},{"ruleId":"85","severity":1,"message":"89","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":22},{"ruleId":"85","severity":1,"message":"90","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":11},{"ruleId":"85","severity":1,"message":"91","line":12,"column":10,"nodeType":"87","messageId":"88","endLine":12,"endColumn":16},"no-unused-vars","'pageWidth' is assigned a value but never used.","Identifier","unusedVar","'ASCIIAnimation' is defined but never used.","'eye' is defined but never used.","'fadeIn' is assigned a value but never used."]